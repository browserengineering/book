[
{"code": "'style' in node.attributes", "type": "dict"},
{"code": "'set-cookie' in response_headers", "type": "dict"},
{"code": "'transfer-encoding' not in response_headers", "type": "dict"},
{"code": "'content-encoding' not in response_headers", "type": "dict"},
{"code": "self.host in COOKIE_JAR", "type": "dict"},
{"code": "'value' in self.tab.focus.attributes", "type": "dict"},
{"code": "self.tab.focus in focusable_nodes", "type": "dict"},
{"code": "focusable_nodes.sort(key=get_tabindex)", "js": "focusable_nodes.sort(get_tabindex)"},
{"code": "image_url", "js": "image_url"},
{"code": "'href' in node.attributes", "type": "dict"},
{"code": "'content-security-policy' in headers", "type": "dict"},
{"code": "url.origin() in self.allowed_origins", "type": "dict"},
{"code": "run_load", "js": "run_load"},
{"code": "run_load()", "js": "await run_load()"},
{"code": "body.decode('utf8', 'replace')", "js": "body"},
{"code": "response.decode('utf8', 'replace')", "js": "response"},
{"code": "run_callback", "js": "await run_callback()"},
{"code": "elt not in self.node_to_handle", "type": "map"},
{"code": "print", "js": "console.log"},
{"code": "tag in self.SELF_CLOSING_TAGS", "type": "list"},
{"code": "tag in self.HEAD_TAGS", "type": "list"},
{"code": "tag not in ['/head'] + self.HEAD_TAGS", "type": "list"},
{"code": "'=' in param", "type": "str"},
{"code": "';' in cookie", "type": "str"},
{"code": "origin not in self.origin_to_js", "type": "dict"},
{"code": "('OpenGL initialized: vendor={},' + 'renderer={}').format(OpenGL.GL.glGetString(OpenGL.GL.GL_VENDOR), OpenGL.GL.glGetString(OpenGL.GL.GL_RENDERER))", "js": ""},
{"code": "new_parent in new_effects", "type": "dict"},
{"code": "'value' in self.node.attributes", "type": "dict"},
{"code": "b'Browser'", "js": "'Browser'"},
{"code": "child_class(node, line, previous_word, word)", "js": "await (new child_class()).init(node, line, previous_word, word)"},
{"code": "child_class(node, line, previous_word, frame)", "js": "await (new child_class()).init(node, line, previous_word, frame)"},
{"code": "'src' in node.attributes", "type": "dict"},
{"code": "'alt' in self.node.attributes", "type": "dict"},
{"code": "'role' in node.attributes", "type": "dict"},
{"code": "'width' in node.attributes", "type": "dict"},
{"code": "'width' in self.node.attributes", "type": "dict"},
{"code": "'name' in node.attributes", "type": "dict"},
{"code": "'href' in elt.attributes", "type": "dict"},
{"code": "'action' in elt.attributes", "type": "dict"},
{"code": "child.tag in BLOCK_ELEMENTS", "type": "list"},
{"code": "self.node.tag in ['input', 'img', 'iframe']", "js": "this.node.tag in ['input', 'img', 'iframe']"},
{"code": "self.node.tag not in ['input', 'button', 'img', 'iframe']", "js": "!(this.node.tag in ['input', 'button', 'img', 'iframe'])"},
{"code": "('TextLayout(x={}, y={}, width={}, height={}, ' + 'node={}, word={})').format(self.x, self.y, self.width, self.height, self.node, self.word)", "js": ""},
 {"code": "('ImageLayout(src={}, x={}, y={}, width={},' + 'height={})').format(self.node.attributes['src'], self.x, self.y, self.width, self.height)", "js": ""},
{"code": "MeasureTime()", "js": "new MeasureTime()"},
{"code": "len(self.tab.window_id_to_frame)", "js": "Object.keys(this.tab.window_id_to_frame).length"},
{"code": "self.default_style_sheet.copy()", "js": "this.default_style_sheet.slice()"},
{"code": "f.read()", "js": "f.read()"},
{"code": "open('runtime15.js').read()", "js": "filesystem.open('runtime15.js').read()"},
{"code": "open('browser15.css').read()", "js": "filesystem.open('browser15.css').read()"},
{"code": "response.read()", "js": "response.read()"}
]