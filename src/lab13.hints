[{"code": "'action' in elt.attributes", "type": "dict"},
 {"code": "'href' in elt.attributes", "type": "dict"},
 {"code": "b'Browser'", "js": "'Browser'"},
 {"code": "MeasureTime()", "js": "new MeasureTime()"},
 {"code": "print", "js": "console.log"},
 {"code": "elt not in self.node_to_handle", "type": "map"},
 {"code": "self.node_to_handle = {}", "js": "    this.node_to_handle = new Map();"},
 {"code": "self.node_to_handle.get(elt, -1)", "js": "this.node_to_handle.get(elt) ?? -1"},
 {"code": "self.node_to_handle[elt]", "js": "this.node_to_handle.get(elt)"},
 {"code": "len(self.node_to_handle)", "js": "this.node_to_handle.size"},
 {"code": "self.node_to_handle[elt] = handle", "js": "      this.node_to_handle.set(elt, handle);"},
 {"code": "('DrawRect(top={} left={} ' + 'bottom={} right={} color={})').format(self.top, self.left, self.bottom, self.right, self.color)", "js": ""},
 {"code": "('TextLayout(x={}, y={}, width={}, height={}, ' + 'node={}, word={})').format(self.x, self.y, self.width, self.height, self.node, self.word)", "js": ""},
 {"code": "('NumericAnimation(' + 'old_value={old_value}, change_per_frame={change_per_frame}, ' + 'num_frames={num_frames})').format(old_value=self.old_value, change_per_frame=self.change_per_frame, num_frames=self.num_frames)", "js": ""},
 {"code": "('layer: composited_bounds={} ' + 'absolute_bounds={} first_chunk={}').format(self.composited_bounds(), self.absolute_bounds(), self.display_items if len(self.display_items) > 0 else 'None')", "js": ""},
 {"code": "('OpenGL initialized: vendor={},' + 'renderer={}').format(OpenGL.GL.glGetString(OpenGL.GL.GL_VENDOR), OpenGL.GL.glGetString(OpenGL.GL.GL_RENDERER))", "js": ""},
 {"code": "self.s[self.i] in chars", "js": "chars.find((c) => c == this.s[this.i])"},
 {"code": "property not in old_style", "type": "dict"},
 {"code": "property not in new_style", "type": "dict"},
 {"code": "'style' in node.attributes", "type": "dict"},
 {"code": "node not in self.composited_updates", "type": "list"},
 {"code": "new_parent in new_effects", "type": "dict"},
 {"code": "child.tag in BLOCK_ELEMENTS", "type": "list"},
 {"code": "rect.outset(1, 1)", "js": "rect.outset(1, 1)"},
 {"code": "sys.exit()", "js": ""},
 {"code": "f.read()", "js": "f.read()"},
 {"code": "open('runtime13.js').read()", "js": "filesystem.open('runtime13.js').read()"}

]
